#pragma checksum "C:\Users\Net\Desktop\WeiXin\ZZB.Core\ZZB.WebMVC.Core\Views\File\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fed9f1cf47afa3d4675c4890215961065c9aa163"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_File_Index), @"mvc.1.0.view", @"/Views/File/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Net\Desktop\WeiXin\ZZB.Core\ZZB.WebMVC.Core\Views\_ViewImports.cshtml"
using ZZB.WebMVC.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Net\Desktop\WeiXin\ZZB.Core\ZZB.WebMVC.Core\Views\_ViewImports.cshtml"
using ZZB.WebMVC.Core.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fed9f1cf47afa3d4675c4890215961065c9aa163", @"/Views/File/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ffc40e1b3020e9442edf34dea2811b6cd5093350", @"/Views/_ViewImports.cshtml")]
    public class Views_File_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/_layout/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/_layout/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/_layout/dist/css/adminlte.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/_layout/plugins/datatables/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/_layout/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/_layout/plugins/datatables-responsive/js/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/_layout/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Net\Desktop\WeiXin\ZZB.Core\ZZB.WebMVC.Core\Views\File\Index.cshtml"
  
    ViewData["Title"] = "上传文件";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "fed9f1cf47afa3d4675c4890215961065c9aa1636438", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "fed9f1cf47afa3d4675c4890215961065c9aa1637553", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "fed9f1cf47afa3d4675c4890215961065c9aa1638668", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            DefineSection("Style", async() => {
                WriteLiteral(@"
    <style>
        .el-breadcrumb__inner a, .el-breadcrumb__inner.is-link {
            color: #007bff
        }
        .demo-table-expand {
            font-size: 0;
        }

            .demo-table-expand label {
                width: 90px;
                color: #99a9bf;
            }

            .demo-table-expand .el-form-item {
                margin-right: 0;
                margin-bottom: 0;
                width: 50%;
            }
    </style>
");
            }
            );
            WriteLiteral("\r\n<div class=\"card\"");
            BeginWriteAttribute("id", " id=\"", 839, "\"", 844, 0);
            EndWriteAttribute();
            WriteLiteral(@">

    <div class=""card-header"">
        <h3 class=""card-title"">
            <el-breadcrumb separator=""/"">
                <el-breadcrumb-item v-for=""(item,index) in formSearch.menu"">
                    <a href=""javascript:void(0)"" v-if=""formSearch.searchid != item.val"" ");
            WriteLiteral(@"@click=""change(item.val)"">{{item.label}}</a>
                    <a href=""javascript:void(0)"" v-else>{{item.label}}</a>
                </el-breadcrumb-item>
            </el-breadcrumb>
        </h3>

        <div class=""card-tools"">
            <div class=""input-group input-group-sm"">
                <button type=""button"" class=""btn bg-gradient-primary btn-xs"" style=""margin-right:10px"" ");
            WriteLiteral("@click=\"dialogVisible=true\">上传文件</button>\r\n                <button type=\"button\" class=\"btn bg-gradient-primary btn-xs\" style=\"margin-right: 10px\" ");
            WriteLiteral(@"@click=""dialogFormVisible=true"">新建文件夹</button>
                <input type=""text"" v-model=""formSearch.search"" class=""form-control float-right"" placeholder=""所有您的文件"">

                <div class=""input-group-append"">
                    <button type=""submit"" class=""btn btn-default"">
                        <i class=""fas fa-search"" ");
            WriteLiteral(@"@click=""init()""></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class=""card-body table-responsive"">
        <table class=""table table-hover text-nowrap"">
            <thead>
                <tr>
                    <th><el-checkbox name=""type""");
            BeginWriteAttribute("style", " style=\"", 2328, "\"", 2336, 0);
            EndWriteAttribute();
            WriteLiteral(@"></el-checkbox></th>
                    <th>文件名</th>
                    <th>大小</th>
                    <th>共享</th>
                    <th>修改日期</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for=""item in tableData"">
                    <td width=""5%""><el-checkbox name=""type"" ></el-checkbox></td>
                    <td width=""50%"">
                        <img :src=""item.iCon"" style=""width: 39px;padding-right:10px"" />
                        <a v-if=""item.isFolder"" href=""javascript:void(0)"" ");
            WriteLiteral(@"@click=""open(item.id,item.name)"">{{item.name}}</a>
                        
                        <span v-else>{{item.fileUri}}<a :href=""item.fileUri"">{{item.name}}</a></span>
                    </td>

                    <td><span class=""tag tag-success"">{{item.fileSize}}</span></td>
                    <td>
                        <el-switch v-model=""item.isShare == 'True'"">
                        </el-switch>
                    </td>
                    <td>{{item.modifyDateStr}}</td>
                </tr>
                
            </tbody>
        </table>
    </div>

    <div class=""card-footer"">
         
    </div>
</div>


<el-dialog title=""新建文件夹"" :visible.sync=""dialogFormVisible"" width=""430px"">
    <el-form ref=""form"" :model=""form"" label-width=""100px"">
        <el-form-item label=""文件夹名称"">
            <el-input v-model=""form.name""></el-input>
        </el-form-item>
        <el-form-item label=""选择图标"">
            <el-select v-model=""form.iCon"" placeholder=""请选择图标"">");
            WriteLiteral(@"
                <el-option v-for=""item in folder"" :label=""item.label"" :value=""item.val"">
                    <span style=""float: left"">
                        <img :src=""item.val"" style="" width: 20px;"" />
                    </span>
                    <span style=""float: right; color: #8492a6; font-size: 13px"">{{ item.label }}</span>
                </el-option>
            </el-select><img :src=""form.iCon"" style="" width: 20px;"" />
        </el-form-item>
        <el-form-item label=""是否共享"">
            <el-switch v-model=""form.isShare""></el-switch>
        </el-form-item>
        <el-form-item label=""文件夹大小"">
            <el-input v-model=""form.fileSize"">
                <template slot=""append"">
                    M
                </template>
            </el-input>
        </el-form-item>
        <el-form-item>
            <el-button type=""primary"" ");
            WriteLiteral("@click=\"onSubmit\">立即创建</el-button>\r\n            <el-button ");
            WriteLiteral(@"@click=""dialogFormVisible = false"">取消</el-button>
        </el-form-item>
    </el-form>
</el-dialog>
<el-dialog title=""上传文件""
           :visible.sync=""dialogVisible""
           width=""30%"">
    <el-upload class=""upload-demo""
               ref=""upload""
               action=""/File/Upload""
               :on-success=""handleSuccess""
               :on-preview=""handlePreview""
               :on-remove=""handleRemove""
               :file-list=""fileList""
               :auto-upload=""false"">
        <el-button slot=""trigger"" size=""small"" type=""primary"">选取文件</el-button>
        <div slot=""tip"" class=""el-upload__tip"">只能上传jpg/png文件，且不超过500kb</div>
    </el-upload>
    <span slot=""footer"" class=""dialog-footer"">
        <el-button ");
            WriteLiteral("@click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" ");
            WriteLiteral("@click=\"submitUpload\">确 定 上 传</el-button>\r\n    </span>\r\n</el-dialog>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fed9f1cf47afa3d4675c4890215961065c9aa16316233", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fed9f1cf47afa3d4675c4890215961065c9aa16317333", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fed9f1cf47afa3d4675c4890215961065c9aa16318433", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fed9f1cf47afa3d4675c4890215961065c9aa16319533", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>

        var page = new Vue({
            el: ""#app"",
            data() {
                return {
                    dialogFormVisible: false,
                    dialogVisible: false,
                    formSearch: {
                        search: '',
                        searchid: '',
                        menu: [{
                            val: '',
                            label: '全部文件'
                        }]
                    },

                    folder: [{ val: ""/imgs/folder/folder-1.png"", label: ""folder-1"", },
                    { val: ""/imgs/folder/folder-2.png"", label: ""folder-2"", },
                    { val: ""/imgs/folder/folder-3.png"", label: ""folder-3"", },
                    { val: ""/imgs/folder/folder-4.png"", label: ""folder-4"", },
                    { val: ""/imgs/folder/folder-5.png"", label: ""folder-5"", }],
                    form: {
                        name: '',
                        iCon: '/imgs/folder/folder-3.png',
    ");
                WriteLiteral(@"                    isFolder: true,
                        isShare: false,
                        fileSize: '2',
                        documentInfoId: ''
                    },
                    formInline: {
                        user: '',
                        region: ''
                    },
                    tableData: [],
                    multipleSelection: [],
                    fileList: [],
                }
            },
            created() {
                this.Init();
            },
            methods: {
                Init() {
                    var that = this;
                    $.get(""/Document/DocumentManager/GetDocumentList"", {
                        DocumentId:
                            that.formSearch.searchid, search: that.formSearch.search
                    }, function (res) {
                        console.log(res)
                        that.tableData = res.data.table;
                    });
                },
                ");
                WriteLiteral(@"open(id, label) {
                    var that = this;
                    this.formSearch.searchid = id;
                    this.formSearch.menu.push({
                        val: id,
                        label: label
                    });
                    that.Init();
                },
                change(id) {
                    var that = this;
                    that.formSearch.searchid = id;
                    var d = that.formSearch.menu.findIndex(p => p.val == id)
                    if (d > -1) {
                        that.formSearch.menu.splice(d + 1, that.formSearch.menu.length);
                        that.Init();
                    }
                },
                onSubmit() {
                    var that = this;
                    console.log(that.form)
                    that.form.documentInfoId = that.formSearch.searchid
                    $.post(""/Document/DocumentManager/AddFolder"", that.form, function () {
                        that.dialo");
                WriteLiteral(@"gFormVisible = true;
                        that.$message.success(""ok"")
                        that.Init();
                    })
                },
                handleSelectionChange(val) {
                    this.multipleSelection = val;
                },
                submitUpload() {
                    this.$refs.upload.submit();
                },
                handleRemove(file, fileList) {
                    console.log(file, fileList);
                },
                handlePreview(file) {
                    console.log(file);
                },
                handleSuccess(response, file, fileList) {
                    var that = this;
                    var data = {
                        DocumentInfoId: that.form.documentInfoId,
                        FileId: response.id,
                        IsShare: false,
                        IsFolder: false,
                        Name: response.displayName,
                    }
                    $.post(");
                WriteLiteral(@"""/Document/DocumentManager/AddFolder"", data, function () {
                        that.dialogVisible = true;
                        that.$message.success(""ok"")
                        that.Init();
                    })
                }
            }
        })
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
